name: Check Minecraft Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Her gün UTC 00:00'da

jobs:
  check-release:
    name: Check for new Minecraft release
    runs-on: ubuntu-latest
    outputs:
      new_release_found: ${{ steps.check_version.outputs.new_release_found }}
      release_id: ${{ steps.check_version.outputs.release_id }}
    steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Restore last known version
      uses: actions/cache@v3
      id: version_cache
      with:
        path: last_version.txt
        key: minecraft-version

    - name: Check for new release
      id: check_version
      run: |
        import requests
        import os

        # API'den son sürüm bilgisini çek
        manifest_url = "https://piston-meta.mojang.com/mc/game/version_manifest_v2.json"
        response = requests.get(manifest_url)
        data = response.json()
        latest_release = data['latest']['release']
        print(f"Latest stable release: {latest_release}")

        # Önceki sürümü kontrol et
        last_version = ""
        if os.path.exists("last_version.txt"):
            with open("last_version.txt", "r") as f:
                last_version = f.read().strip()

        # Yeni sürüm kontrolü
        new_release_found = "false"
        if last_version != latest_release:
            print(f"New release detected! {last_version} -> {latest_release}")
            new_release_found = "true"
            # Yeni sürümü kaydet
            with open("last_version.txt", "w") as f:
                f.write(latest_release)
        else:
            print("No new release found")

        # Output ayarla
        print(f"::set-output name=new_release_found::{new_release_found}")
        print(f"::set-output name=release_id::{latest_release}")
      shell: python

    - name: Save new version to cache
      if: steps.check_version.outputs.new_release_found == 'true'
      uses: actions/cache@v3
      with:
        path: last_version.txt
        key: minecraft-version

  run-main:
    name: Run main.py
    needs: check-release
    if: ${{ needs.check-release.outputs.new_release_found == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Run main script
      run: python main.py
      env:
        NEW_RELEASE_ID: ${{ needs.check-release.outputs.release_id }}
