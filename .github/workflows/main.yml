name: Check Minecraft Release

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # her gün 00:00'da çalışır

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
      latest_version: ${{ steps.get_version.outputs.latest_version }}
    steps:
      - name: Get latest Minecraft release info
        id: get_version
        run: |
          data=$(curl -sL https://piston-meta.mojang.com/mc/game/version_manifest_v2.json)
          LATEST_VERSION=$(echo "$data" | jq -r '.versions[] | select(.type=="release") | .id' | head -n1)

          echo "latest_version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "$LATEST_VERSION" > version.txt

      - name: Load cached version
        id: cache_version
        uses: actions/cache@v3
        with:
          path: version.txt
          key: mc-${{ steps.get_version.outputs.latest_version }}

      - name: Should run?
        id: should_run
        run: |
          if [ "${{ steps.cache_version.outputs.cache-hit }}" == "true" ]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  run-script:
    runs-on: ubuntu-latest
    needs: check-release
    if: needs.check-release.outputs.should_run == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run script
        run: python main.py ${{ needs.check-release.outputs.latest_version }}
